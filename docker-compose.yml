version: '3.8'

services:
  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - test_network

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: stocktalk
      MYSQL_ROOT_PASSWORD: 1234
      TZ: 'Asia/Seoul'
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test_network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --requirepass 1234 --port 6379
    networks:
      - test_network

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - test_network

  member-service:
    build: ./member-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/stocktalk
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: 1234
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092

    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - test_network

  stock-service:
    build: ./stock-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/stocktalk
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: 1234
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092

    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - test_network



  newsfeed-service:
    build: ./newsfeed-service
    ports:
      - "8083:8083"
    environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/stocktalk
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: 1234
        EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
        SPRING_REDIS_HOST: redis
        SPRING_REDIS_PORT: 6379
        SPRING_REDIS_PASSWORD: 1234
        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092

    depends_on:
        eureka-server:
            condition: service_healthy
        mysql:
            condition: service_healthy
        redis:
            condition: service_healthy
        kafka:
          condition: service_healthy
    networks:
        - test_network

  activity-service:
    build: ./activity-service
    ports:
      - "8084:8084"
    environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/stocktalk
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: 1234
        EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
        SPRING_REDIS_HOST: redis
        SPRING_REDIS_PORT: 6379
        SPRING_REDIS_PASSWORD: 1234
        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092

    depends_on:
        eureka-server:
            condition: service_healthy
        mysql:
            condition: service_healthy
        redis:
            condition: service_healthy
        kafka:
          condition: service_healthy
    networks:
        - test_network


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - test_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
    networks:
      - test_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    platform: linux/amd64
    ports:
      - "9090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_READONLY: "false"
    depends_on:
      - kafka
      - zookeeper
    networks:
      - test_network

volumes:
  mysql-data:

networks:
  test_network:
    driver: bridge